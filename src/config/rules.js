/* eslint-disable prettier/prettier */
import variables from "./variables"

/**
 * в каждом подмассиве массива rules:
 * 1ый элемент - Высота (вход)
 *  0 - Столешница очень низко
 *  1 - Ниже стула
 *  2 - Как стул
 *  3 - Как стол
 *  4 - С рост человека и выше
 * 2ой элемент - Ширина (вход)
 *  0 - Поместится телефон боком
 *  1 - Поместится раскрытая тетрадь
 *  2 - Поместится 2 раскрытые тетради
 *  3 - Можно растянуть руки в разные стороны
 * 3ий элемент - Материал (вход)
 *  0 - Палки и листья
 *  1 - Картон
 *  2 - Фанера
 *  3 - Дерево/дсп
 *  4 - Камень
 * 4ый элемент - Место для протягивания ног (вход)
 *  0 - Для детской ступни
 *  1 - Для большой ступни
 *  2 - Норм, если согнуть ноги в коленях
 *  3 - Можно расправить ноги среднего роста человеку
 *  4 - Можно расправить ноги высокого роста человеку
 * 5ый элемент - Стоит ли сидеть за столом (выход)
 *  0 - Это не похоже на стол
 *  1 - Лучше не садиться, но если очень хочется...
 *  2 - Для аккуратного ребенка
 *  3 - Для подростка
 *  4 - Для взрослого
 *  5 - Для компании друзей
 */
const rules = [
    /** 
     * Если показатели 0 - 1, то
     * это не похоже на стол
     * 5 правил
     */
    [0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0],
    [0, 0, 1, 0, 0],
    [0, 1, 0, 0, 0],
    [1, 0, 0, 0, 0],
    /**
     * Если из палок и листьев,
     * то сложно назвать это столом,
     * хотя если другие параметры больше 
     * 2х, то так и быть, это больше, чем 
     * не похоже на стол
     * 10 правил
     */
    [0, 0, 0, 1, 0],
    [0, 1, 0, 1, 0],
    [1, 1, 0, 1, 0],
    [2, 1, 0, 1, 0],
    [2, 2, 0, 1, 0],
    [2, 2, 0, 2, 0],
    [1, 2, 0, 2, 0],
    [1, 1, 0, 2, 0],
    [2, 1, 0, 2, 0],
    [2, 2, 0, 1, 0],
    /**
     * Если места для протягивания ног
     * хватит только для детской ступни,
     * то стол маааксимум для подростка
     * 10 правил
     */
    [1, 1, 1, 0, 1],
    [0, 0, 2, 0, 0],
    [0, 0, 3, 0, 0],
    [1, 0, 3, 0, 0],
    [0, 2, 3, 0, 1],
    [1, 2, 3, 0, 1],
    [2, 2, 2, 0, 2],
    [2, 3, 3, 0, 2],
    [3, 3, 4, 0, 2],
    [4, 3, 4, 0, 3],
    /**
     * Если высота с рост человека и выше,
     * то для ребенка не подойдет, минимум 
     * для подростка
     * 13 правил
     */
    [4, 0, 0, 0, 0],
    [4, 0, 1, 1, 0],
    [4, 1, 0, 2, 0],
    [4, 1, 1, 3, 1],
    [4, 2, 1, 1, 1],
    [4, 1, 2, 2, 1],
    [4, 1, 2, 4, 3],
    [4, 3, 2, 2, 3],
    [4, 2, 2, 2, 3],
    [4, 2, 3, 4, 4],
    [4, 3, 3, 3, 4],
    [4, 3, 4, 3, 5],
    [4, 3, 4, 4, 5],
    /**
     * Если как стул, то хорошо для ребенка 
     * или для подростка
     * 11 правил
     */
    [2, 0, 2, 0, 2],
    [2, 0, 2, 1, 2],
    [2, 1, 0, 2, 2],
    [2, 1, 1, 1, 2],
    [2, 2, 1, 1, 2],
    [2, 1, 2, 2, 2],
    [2, 1, 2, 4, 3],
    [2, 3, 2, 2, 3],
    [2, 2, 3, 4, 3],
    [2, 3, 3, 3, 3],
    [2, 3, 4, 3, 3],
]

/**
 * Превращаем массив правил в виде массивов цифр в массив
 * в виде массивов полноценных объектов (где каждый объект
 * представляет какую-либо функциональную переменную)
 * Всё соединяем через AND.
 */
for (let i = 0; i < rules.length; i++) {
    rules[i] = {
        inputs: [
            variables.inputs[0].fuzzyAreas[rules[i][0]],
            variables.inputs[1].fuzzyAreas[rules[i][1]],
            variables.inputs[2].fuzzyAreas[rules[i][2]],
            variables.inputs[3].fuzzyAreas[rules[i][3]]
        ],
        output: variables.outputs[0].fuzzyAreas[rules[i][4]]
    };
}

console.log("Правила в нормальном виде", rules);

export default rules;